# ## CI/CD Settings - Schedules
# URL: https://gitlab.com/kalilinux/tools/upstream-watch
# CI/CD -> Schedules -> New Schedule
# - Description: `Daily`
# - Interval Pattern: `Custom` -> `0 0 * * 0`
# - Cron Timezone: `UTC`
# - Target branch or tag: `master`
# - Activated: `Enable`

image: 'kalilinux/kali-rolling'

stages:
  - check_upstream

variables:
  # Create a shallow git copy
  GIT_DEPTH: 1
  # Which Kali metapackages to try
  KALI_METAPACKAGE: kali-linux-large
  # Location to work
  WORKDIR: /tmp/upstream-watch
  # How much to show out on the screen (not in the report)
  VERBOSE: 1

pages:
  stage: check_upstream
  before_script:
    - apt-get update
    - apt-get -y --no-install-recommends install wget devscripts xmlstarlet dctrl-tools

  script:
    # Some debian/watch files use git
    - apt-get -y --no-install-recommends install git
    - echo "WORKDIR=${WORKDIR}" > config
    - echo "VERBOSE=${VERBOSE}" >> config
    - echo "PACKAGE_LIST=${WORKDIR}/package-list" >> config
    - mkdir -pv "${WORKDIR}/"
    - |
       apt-cache show ${KALI_METAPACKAGE} \
       | awk -F ': ' '/Depends/ {print $2}' \
       | tr ',' '\n' \
       | sed 's_|.*__g' \
       | sed 's_^ __g' \
       | grep -v 'kali-linux-\|kali-tools-' \
       | tee ${WORKDIR}/package-list
    - ./upstream-watch

  after_script:
    - mkdir -pv ./public/
    - |
       cat << EOF > ./public/index.html
       <h2>Report</h2>
       <pre>
       $( cat ${WORKDIR}/report )
       </pre>
       <hr>
       <h2>Status</h2>
       <pre>
       $( cat ${WORKDIR}/status )
       </pre>
       EOF

  artifacts:
    paths:
      - public
    expire_in: 1 week
